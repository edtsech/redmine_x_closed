= Issue_closed

This redmine plugin closing issues a week after their "Resolving".
  
== Installing delayed_job:

To working plugin Redmine Issue Closed you need to install and start delayed_job. Delayed job is plugin for background processes.

In your terminal:

  1) script/plugin install git://github.com/collectiveidea/delayed_job.git -r v2.0

(only v2.0 works with Rails 2.x)
  
  2) script/generate delayed_job
     rake db:migrate

  3) create config/initializers/delayed_job_config.rb and add this code into it:

  Delayed::Worker.backend = :active_record
  silence_warnings do
    Delayed::Job.const_set("MAX_ATTEMPTS", 3)
    Delayed::Job.const_set("MAX_RUN_TIME", 7.days)
  end

  4) rake jobs:work 

(for starting background processes)

If you have any problem regarding DelayedJobs, go to:
  http://github.com/collectiveidea/delayed_job

== Installing Redmine Issues Closed on Redmine 0.9+ (tested on 1.2.1)

  1) script/plugin install git://github.com/edtsech/redmine_x_closed.git

  2) rake db:migrate_plugins
  
  3) go to Admin -> Issue Statuses and set up plugin (select "resolved" & "closed" statuses) 
  
== Installing Redmine Issues Closed on Redmine 0.8.*

  1) Go to "Download" tab
  
  2) Download "Redmineight" archive
  
  3) Unpack archive to vendor/plugins
  
  4) rake db:migrate_plugins
  
  5) go to Admin -> Issue Statuses and set up plugin (select "resolved" & "closed" statuses) 

== To turn off Redmine Issue Closed Plugin:
   
  project/settings/ > Modules
